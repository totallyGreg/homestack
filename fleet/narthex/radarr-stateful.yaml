apiVersion: v1
kind: Service
metadata:
  name: radarr
  labels:
    app: radarr
spec:
  ports:
    - port: 7878
      name: radarrui
  clusterIP: None
  selector:
    statefulset.kubernetes.io/pod-name: radarr-0
    app: radarr
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: radarr-tls
spec:
  parentRefs:
    - name: narthex-gateway
      sectionName: https
      namespace: narthex
  hostnames:
    - radarr.infra.falcone.us
    - radarr.test.pseudo-blue.com
    - radarr.snellarcade.org
    - radarr.lebastion.snellarcade.org
  rules:
    - backendRefs:
        - name: radarr
          port: 7878
      matches:
        - path:
            type: PathPrefix
            value: /
    # - filters:
    # - type: RequestRedirect
    #   requestRedirect:
    #     scheme: https
    #     statusCode: 301
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: radarr
spec:
  hostnames:
    - radarr.infra.falcone.us
  parentRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: narthex-gateway
      sectionName: http
      namespace: narthex
  rules:
    - backendRefs:
        - name: radarr
          port: 7878
      matches:
        - path:
            type: PathPrefix
            value: /
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: radarr
spec:
  serviceName: 'radarr'
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
        - name: radarr
          # image: lscr.io/linuxserver/radarr:develop
          image: mdhiggins/radarr-sma:latest
          imagePullPolicy: Always
          env:
            - name: PGID
              value: '1001'
            - name: PUID
              value: '1001'
            - name: TZ
              value: America/New_York
          ports:
            - containerPort: 7878
              name: radarrui
              protocol: TCP
          resources:
            requests:
              memory: '512Mi'
              # cpu: "250m"
            limits:
              memory: '512Mi'
              # cpu: "1000m"
          volumeMounts:
            - name: config
              mountPath: /config
            # - name: backups
            #   mountPath: /config/Backups
            - name: downloads
              subPath: torrents
              mountPath: /downloads
            - name: media
              mountPath: /movies
              subPath: Movies
            - name: media
              mountPath: /config/Backups
              subPath: Archives/Radarr
            - name: sma-autoprocess
              mountPath: /usr/local/sma/config/autoProcess.ini
          # livenessProbe:
          #   exec:
          #     command:
          #       - ls
          #       - /config/lost+found
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
          # readinessProbe:
          #   httpGet:
          #     path: /api/v3/system/status
          #     port: 7878
          #   initialDelaySeconds: 10
          #   periodSeconds: 5
          #   timeoutSeconds: 5
      securityContext:
        # runAsUser: 1001
        # runAsGroup: 1001
        fsGroup: 8675309
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media-pvc
        - name: downloads
          persistentVolumeClaim:
            claimName: transient-pvc
        - name: sma-autoprocess
          secret:
            secretName: sma-config
            optional: true
  volumeClaimTemplates:
    - metadata:
        name: config
      spec:
        accessModes: ['ReadWriteOnce']
        storageClassName: 'longhorn'
        resources:
          requests:
            storage: 2Gi
