apiVersion: v1
kind: Service
metadata:
  name: kuard
spec:
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 8080
    - protocol: TCP
      name: https
      port: 443
      targetPort: 8443
  selector:
    app: kuard
---
kind: Ingress
apiVersion: networking.k8s.io/v1beta1
metadata:
  name: kuard
  annotations:
    kubernetes.io/ingress.class: istio
    # traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
    # traefik.ingress.kubernetes.io/router.middlewares: redirect-http@kuberntes-crd
spec:
  rules:
  - host: kuard.home.falcone.us
    http:
      paths:
      - path: "/"
        backend:
          serviceName: kuard
          servicePort: 80
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: kuard-internal
# spec:
#   entryPoints:
#     - web
#   routes:
#     - kind: Rule
#       match: Host(`kuard.home.falcone.us`)

#       services:
#         - name: kuard
#           port: 80
#       # middlewares:
#       #   - name: auth-organizr
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: kuard-tls
#   namespace: test
# spec:
#   entryPoints:
#     - websecure
#   routes:
#     - match: Host(`kuard.test.falcone.us`)
#       kind: Rule
#       services:
#         - name: kuard
#           port: 80
#       # middlewares: auth-organizr
#   tls:
#     certResolver: lestage
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRouteTCP
# metadata:
#   name: kuardtls
# spec:
#   entryPoints:
#     - websecure
#   routes:
#     - match: HostSNI(`kuard.test.falcone.us`)
#       kind: Rule
#       services:
#         - name: kuard
#           port: 443
#       # middlewares: auth-organizr
#   tls:
#     # passthrough: true
#     certResolver: stage
#     domains:
#     - main: kuard.test.falcone.us
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kuard
  labels:
    app: kuard

spec:
  replicas: 2
  selector:
    matchLabels:
      app: kuard
  template:
    metadata:
      labels:
        app: kuard
    spec:
      # affinity:
      #   podAntiAffinity:
      #     preferredDuringSchedulingIgnoredDuringExecution:
      #       - topologyKey: "kubernetes.io/hostname"
      containers:
        - name: kuard
          image: gcr.io/kuar-demo/kuard-amd64:blue
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
